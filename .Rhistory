tidygraph::activate("nodes") |>
left_join(tibble::rownames_to_column(corpus,
var = "rowname") |>
transmute(rowname,
corpus = corpus),
by = c("name" = "rowname"))
#| label: corpus-summary
summary_coupling_network <- coupling_net |>
tidygraph::activate("nodes") |>
as_tibble() |>
mutate(corpus = factor(corpus)) |>
group_by(corpus) |>
summarize(n = n())
# Number of documents in each corpus
# Hansen
n_h <- summary_coupling_network |>
filter(corpus == "Hansen") |>
pull(n)
# Wilson
n_w <- summary_coupling_network |>
filter(corpus == "Wilson") |>
pull(n)
# Both
n_b <- summary_coupling_network |>
filter(corpus == "Both") |>
pull(n)
#| label: plot-docs-per-year
#| include: false
docs_per_year_plot <- ggplot(data = corpus |>
group_by(corpus, PY) |>
summarize(n = n()),
.groups = "drop") +
geom_col(aes(x = PY,
y = n,
fill = corpus),
color = "black") +
xlab("Publication year") +
ylab("Number of documents") +
theme_minimal()
ggsave(filename = glue::glue(here::here(),
"/figures/docs_per_year_plot.png"))
#| label: fig-docs-per-year
#| out-width: 70%
#| fig-cap: "Historical pattern of publication: documents per year."
docs_per_year_plot
#| label: simple-numerical-example-opportunities-and-population
id <- c("1", "2", "3")
O_i <- c(4, 10, 6)
D_j <- c(160, 150, 180)
LU <- data.frame(id, O_i, D_j)
#| label: tbl-small-system-land-use
#| tbl-cap: "Simple system with three zones (ID 1, 2 and 3). Population is in 10,000 persons and opportunities in number of physicians."
LU |>
gt() |>
# tab_spanner("{{W[_i^(1)]}}",
#             columns = 2) |>
# tab_spanner("{{W[_j^(2)]}}",
#             columns = 3) |>
cols_label(id = "ID (i or j)",
O_i = "Population",
D_j = "Opportunities")  |>
cols_align(align = "center",
columns = 2:3) |>
tab_footnote(footnote = md("Population is *Wi^(1)^* when used as a proxy for the mass at the origin, and *Oi* when used as a constraint."),
locations = cells_column_labels(columns = O_i)) |>
tab_footnote(footnote = md("Opportunities is *Wj^(2)^* when used as a proxy for the mass at the destination, and *Dj* when used as a constraint."),
locations = cells_column_labels(columns = D_j)) |>
as_latex()
#| label: simple-numerical-example-cost
C <- expand.grid(oid = c("1", "2", "3"),
did = c("1", "2", "3")) |>
mutate(cost = c(10, 30, 15, 30, 10, 25, 15, 25, 10)) |>
mutate(f1 = cost^-3,
f2 = cost^-2,
f3 = cost^-0.1)
#| label: tbl-small-system-cost
#| tbl-cap: "Cost matrix for system with three zones (travel time in minutes)."
C |>
select(oid, did, cost) |>
tidyr::pivot_wider(names_from = did, values_from = cost) |>
gt() |>
tab_spanner(label = "Destination ID",
columns = 2:4) |>
cols_label(oid = "Origin ID")  |>
cols_align(align = "center",
columns = 2:4) |>
as_latex()
#| label: simple-numerical-example-OD-table
OD <- C |>
left_join(LU |>
select(-D_j),
by = c("oid" = "id")) |>
left_join(LU |>
select(-O_i),
by = c("did" = "id"))
#| label: tbl-simple-example-unconstrained-accessibility
#| tbl-cap: "Simple system: unconstrained accessibility."
unc_acc_ij <- OD |>
group_by(oid) |>
reframe(V_unc_ij_1 = D_j * f1,
V_unc_ij_2 = D_j * f2,
V_unc_ij_3 = D_j * f3)
unc_acc <- unc_acc_ij |>
group_by(oid) |>
summarize(V_unc_i_1 = sum(V_unc_ij_1),
V_unc_i_2 = sum(V_unc_ij_2),
V_unc_i_3 = sum(V_unc_ij_3))
unc_acc |>
gt(rowname_col = "oid") |>
tab_stubhead(label = "Origin") |>
tab_spanner(label = "{{V[_i^0]}}",
columns = 2:4,
level = 2) |>
tab_spanner(label = "{{f_1 (c_ij ) = 1/c[_ij^3]}}",
columns = 2,
level = 1) |>
tab_spanner(label = "{{f_2 (c_ij ) = 1/c[_ij^2]}}",
columns = 3,
level = 1) |>
tab_spanner(label = "{{f_3 (c_ij ) = 1/c[_ij^0.1]}}",
columns = 4,
level = 1) |>
fmt_number(decimals = 3) |>
# cols_label(V_unc_i_1 = md("units: *f<sub>1</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            V_unc_i_2 = md("units: *f<sub>2</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            V_unc_i_3 = md("units: *f<sub>3</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            .fn = md)  |>
cols_label(V_unc_i_1 = md("units: *physicians-minute^-3*"),
V_unc_i_2 = md("units: *physicians-minute^-2*"),
V_unc_i_3 = md("units: *physicians-minute^-0.1*"),
.fn = md)  |>
cols_align(align = "center",
columns = 2:4) |>
cols_width(
stub() ~ px(60),
everything() ~ px(180)
) |>
grand_summary_rows(
columns = c(V_unc_i_1, V_unc_i_2, V_unc_i_3),
fns = list(label = "Sum", fn = "sum")) |>
tab_options(column_labels.font.size = "small") |>
as_latex()
# Calculate the balancing factors/proportionality constants for each of three impedance functions
k_tot <- unc_acc_ij |>
summarize(k1 = sum(LU$D_j)/sum(V_unc_ij_1), # f_1
k2 = sum(LU$D_j)/sum(V_unc_ij_2), # f_2
k3 = sum(LU$D_j)/sum(V_unc_ij_3)) # f_3
LU
k_tot$k1 * LU$D_j
k_tot
LU
sum(LU$D_j
)
k_tot/490
LU$D_j*1.604255
LU
k_tot
k_tot$k1/490
LU
LU
V_unc_ij_1
unc_acc_ij
k_tot$k1
unc_acc_ij
OD
k_tot$k1 * OD$f1
OD
0.78608505+ 0.02911426 +0.2329140
0.02911426 + 0.78608505  +0.05030944
0.23291409 +0.05030944 +0.78608505
1.069309+0.8655087+1.069309
k_tot$k1
tot_acc_ij <- unc_acc_ij |>
mutate(V_tot_ij_1 = k_tot$k1 * V_unc_ij_1,
V_tot_ij_2 = k_tot$k2 * V_unc_ij_2,
V_tot_ij_3 = k_tot$k3 * V_unc_ij_3)
tot_acc <- tot_acc_ij |>
group_by(oid) |>
summarize(V_tot_i_1 = sum(V_tot_ij_1),
V_tot_i_2 = sum(V_tot_ij_2),
V_tot_i_3 = sum(V_tot_ij_3))
tot_acc_ij <- unc_acc_ij |>
mutate(V_tot_ij_1 = k_tot$k1 * V_unc_ij_1,
V_tot_ij_2 = k_tot$k2 * V_unc_ij_2,
V_tot_ij_3 = k_tot$k3 * V_unc_ij_3)
View(LU)
tot_acc_ij <- tot_acc_ij |> left_join(LU |> rename("oid" = "id") |> select(-c("O_i")), by = "oid")
tot_acc_ij
tot_acc <- tot_acc_ij |>
group_by(oid) |>
summarize(V_tot_i_1 = sum(V_tot_ij_1),
D_j = first(D_j)) |>
mutate(kappa_tot_i_1 = V_tot_i_1/D_j)
tot_acc
(1.08+0.878+1.04 ) / 3
View(OD)
View(tot_acc_ij)
View(k_tot)
k_tot
tot_acc_ij <- unc_acc_ij |>
mutate(V_tot_ij_1 = k_tot$k1 * V_unc_ij_1,
V_tot_ij_2 = k_tot$k2 * V_unc_ij_2,
V_tot_ij_3 = k_tot$k3 * V_unc_ij_3) |>
left_join(LU |> rename("oid" = "id") |> select(-c("O_i")), by = "oid")
tot_acc <- tot_acc_ij |>
group_by(oid) |>
summarize(V_tot_i_1 = sum(V_tot_ij_1),
V_tot_i_2 = sum(V_tot_ij_2),
V_tot_i_3 = sum(V_tot_ij_3))
tot_acc_containing_kappa <- unc_acc_ij |>
mutate(V_tot_ij_1 = k_tot$k1 * V_unc_ij_1,
V_tot_ij_2 = k_tot$k2 * V_unc_ij_2,
V_tot_ij_3 = k_tot$k3 * V_unc_ij_3) |>
left_join(LU |> rename("oid" = "id") |> select(-c("O_i")), by = "oid") |>
group_by(oid) |>
summarize(V_tot_i_1 = sum(V_tot_ij_1),
V_tot_i_2 = sum(V_tot_ij_2),
V_tot_i_3 = sum(V_tot_ij_3),
D_j = first(D_j)) |>
mutate(kappa_tot_i_1 = V_tot_i_1/D_j,
kappa_tot_i_2 = V_tot_i_2/D_j,
kappa_tot_i_3 = V_tot_i_3/D_j)
View(tot_acc_containing_kappa)
(1.0255015+1.0712807+0.9179315)/3
(1.0792005+0.8816492+1.0282253)
(1.0792005+0.8816492+1.0282253)/3
knitr::include_graphics(glue::glue(here::here(),
"/figures/access-analytical-device.png"))
#| label: fig-analytical-device-conc-accessibility
#| out-width: 70%
#| fig-cap: "The family of accessibility measures analytical device: labelling and associating ij flows, zonal weights, the single marginals, and the total marginal. The device represents 'accessible opportunities' V, but can be "
knitr::include_graphics(glue::glue(here::here(),
"/figures/access-analytical-device.png"))
#| label: simple-numerical-example-OD-table
OD <- C |>
left_join(LU |>
select(-D_j),
by = c("oid" = "id")) |>
left_join(LU |>
select(-O_i),
by = c("did" = "id"))
#| label: tbl-simple-example-unconstrained-accessibility
#| tbl-cap: "Simple system: unconstrained accessibility."
unc_acc_ij <- OD |>
group_by(oid) |>
reframe(V_unc_ij_1 = D_j * f1,
V_unc_ij_2 = D_j * f2,
V_unc_ij_3 = D_j * f3)
unc_acc <- unc_acc_ij |>
group_by(oid) |>
summarize(V_unc_i_1 = sum(V_unc_ij_1),
V_unc_i_2 = sum(V_unc_ij_2),
V_unc_i_3 = sum(V_unc_ij_3))
unc_acc |>
gt(rowname_col = "oid") |>
tab_stubhead(label = "Origin") |>
tab_spanner(label = "{{V[_i^0]}}",
columns = 2:4,
level = 2) |>
tab_spanner(label = "{{f_1 (c_ij ) = 1/c[_ij^3]}}",
columns = 2,
level = 1) |>
tab_spanner(label = "{{f_2 (c_ij ) = 1/c[_ij^2]}}",
columns = 3,
level = 1) |>
tab_spanner(label = "{{f_3 (c_ij ) = 1/c[_ij^0.1]}}",
columns = 4,
level = 1) |>
fmt_number(decimals = 3) |>
# cols_label(V_unc_i_1 = md("units: *f<sub>1</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            V_unc_i_2 = md("units: *f<sub>2</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            V_unc_i_3 = md("units: *f<sub>3</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            .fn = md)  |>
cols_label(V_unc_i_1 = md("units: *physicians-minute^-3*"),
V_unc_i_2 = md("units: *physicians-minute^-2*"),
V_unc_i_3 = md("units: *physicians-minute^-0.1*"),
.fn = md)  |>
cols_align(align = "center",
columns = 2:4) |>
cols_width(
stub() ~ px(60),
everything() ~ px(180)
) |>
grand_summary_rows(
columns = c(V_unc_i_1, V_unc_i_2, V_unc_i_3),
fns = list(label = "Sum", fn = "sum")) |>
tab_options(column_labels.font.size = "small") |>
as_latex()
knitr::opts_chunk$set(
echo = FALSE,
cache = FALSE,
warning = FALSE,
message = FALSE,
fig.pos = 'H', #to print figures on the line specified in knitted output
comment = '',
out.width = "1\\linewidth")
library(bibliometrix) # Comprehensive Science Mapping Analysis
library(dplyr) # A Grammar of Data Manipulation
library(flextable) # Functions for Tabular Reporting
library(ggplot2) # Create Elegant Data Visualisations Using the Grammar of Graphics
library(ggraph) # An Implementation of Grammar of Graphics for Graphs and Networks
library(glue) # Interpreted String Literals
library(gt) # Easily Create Presentation-Ready Display Tables
library(here) # A Simpler Way to Find Your Files
library(knitr) # A General-Purpose Package for Dynamic Report Generation in R
library(tidytext) # Text Mining using 'dplyr', 'ggplot2', and Other Tidy Tools
suppressMessages(library(gt))
options(gt.html_tag_check = FALSE)
#| label: load-data
load(glue::glue(here::here(),
"/data/corpus.rda"))
#| label: calculate-cocMatrix
#| cache: true
# $A$ is a sparse adjacency matrix with sources cited by each document in the corpus
A <- cocMatrix(corpus,
Field = "CR",
sep = ";")
#| label: coupling-matrix
# The product of $A$ and its transpose gives the bibliographical coupling by cited references $B = A\cdot A^T$
# $B$ is a square symmetric matrix where element $b_{ij}$ is the total number of cited references in common between document $i$ and document $j$. A higher value of $b_{ij}$ indicates a stronger relationship between documents $i$ and $j$ (more references in common). A value of zero indicates no references in common.
B <- tcrossprod(A)
#| label: clean-coupling-matrix
# Remove the diagonal (papers cited within a single source)
B_nd <- B - Matrix::band(B, 0, 0)
#| label: create-coupling-network
#These matrices are sparse symmetric matrices of "adjacencies" between documents in the corpus. Convert `B` to an `igraph` network without the diagonal
coupling_net <- igraph::graph_from_adjacency_matrix(B,
mode = "directed",
weighted = TRUE,
diag = FALSE)
#| label: remove-A-memory
rm(A)
#| label: convert-to-tidygraph
# For convenience, convert the [{igraph}](https://r.igraph.org) object to a [{tidygraph}](https://www.data-imaginist.com/posts/2017-07-07-introducing-tidygraph/) object:
coupling_net <- tidygraph::as_tbl_graph(coupling_net)
#| label: add-corpus-label-to-coupling-network
# Add the `corpus` variable to `coupling_net`. Remember to activate the nodes.
coupling_net <- coupling_net |>
tidygraph::activate("nodes") |>
left_join(tibble::rownames_to_column(corpus,
var = "rowname") |>
transmute(rowname,
corpus = corpus),
by = c("name" = "rowname"))
#| label: corpus-summary
summary_coupling_network <- coupling_net |>
tidygraph::activate("nodes") |>
as_tibble() |>
mutate(corpus = factor(corpus)) |>
group_by(corpus) |>
summarize(n = n())
# Number of documents in each corpus
# Hansen
n_h <- summary_coupling_network |>
filter(corpus == "Hansen") |>
pull(n)
# Wilson
n_w <- summary_coupling_network |>
filter(corpus == "Wilson") |>
pull(n)
# Both
n_b <- summary_coupling_network |>
filter(corpus == "Both") |>
pull(n)
#| label: plot-docs-per-year
#| include: false
docs_per_year_plot <- ggplot(data = corpus |>
group_by(corpus, PY) |>
summarize(n = n()),
.groups = "drop") +
geom_col(aes(x = PY,
y = n,
fill = corpus),
color = "black") +
xlab("Publication year") +
ylab("Number of documents") +
theme_minimal()
ggsave(filename = glue::glue(here::here(),
"/figures/docs_per_year_plot.png"))
#| label: fig-docs-per-year
#| out-width: 70%
#| fig-cap: "Historical pattern of publication: documents per year."
docs_per_year_plot
#| label: fig-analytical-device-conc-accessibility
#| out-width: 70%
#| fig-cap: "The family of accessibility measures analytical device: labelling and associating ij flows, zonal weights, the single marginals, and the total marginal."
knitr::include_graphics(glue::glue(here::here(),
"/figures/access-analytical-device.png"))
#| label: simple-numerical-example-opportunities-and-population
id <- c("1", "2", "3")
O_i <- c(4, 10, 6)
D_j <- c(160, 150, 180)
LU <- data.frame(id, O_i, D_j)
#| label: tbl-small-system-land-use
#| tbl-cap: "Simple system with three zones (ID 1, 2 and 3). Population is in 10,000 persons and opportunities in number of physicians."
LU |>
gt() |>
# tab_spanner("{{W[_i^(1)]}}",
#             columns = 2) |>
# tab_spanner("{{W[_j^(2)]}}",
#             columns = 3) |>
cols_label(id = "ID (i or j)",
O_i = "Population",
D_j = "Opportunities")  |>
cols_align(align = "center",
columns = 2:3) |>
tab_footnote(footnote = md("Population is *Wi^(1)^* when used as a proxy for the mass at the origin, and *Oi* when used as a constraint."),
locations = cells_column_labels(columns = O_i)) |>
tab_footnote(footnote = md("Opportunities is *Wj^(2)^* when used as a proxy for the mass at the destination, and *Dj* when used as a constraint."),
locations = cells_column_labels(columns = D_j)) |>
as_latex()
#| label: simple-numerical-example-cost
C <- expand.grid(oid = c("1", "2", "3"),
did = c("1", "2", "3")) |>
mutate(cost = c(10, 30, 15, 30, 10, 25, 15, 25, 10)) |>
mutate(f1 = cost^-3,
f2 = cost^-2,
f3 = cost^-0.1)
#| label: tbl-small-system-cost
#| tbl-cap: "Cost matrix for system with three zones (travel time in minutes)."
C |>
select(oid, did, cost) |>
tidyr::pivot_wider(names_from = did, values_from = cost) |>
gt() |>
tab_spanner(label = "Destination ID",
columns = 2:4) |>
cols_label(oid = "Origin ID")  |>
cols_align(align = "center",
columns = 2:4) |>
as_latex()
#| label: simple-numerical-example-OD-table
OD <- C |>
left_join(LU |>
select(-D_j),
by = c("oid" = "id")) |>
left_join(LU |>
select(-O_i),
by = c("did" = "id"))
#| label: simple-numerical-example-OD-table
OD <- C |>
left_join(LU |>
select(-D_j),
by = c("oid" = "id")) |>
left_join(LU |>
select(-O_i),
by = c("did" = "id"))
#| label: tbl-simple-example-unconstrained-accessibility
#| tbl-cap: "Simple system: unconstrained accessibility."
unc_acc_ij <- OD |>
group_by(oid) |>
reframe(V_unc_ij_1 = D_j * f1,
V_unc_ij_2 = D_j * f2,
V_unc_ij_3 = D_j * f3)
unc_acc <- unc_acc_ij |>
group_by(oid) |>
summarize(V_unc_i_1 = sum(V_unc_ij_1),
V_unc_i_2 = sum(V_unc_ij_2),
V_unc_i_3 = sum(V_unc_ij_3))
unc_acc |>
gt(rowname_col = "oid") |>
tab_stubhead(label = "Origin") |>
tab_spanner(label = "{{V[_i^0]}}",
columns = 2:4,
level = 2) |>
tab_spanner(label = "{{f_1 (c_ij ) = 1/c[_ij^3]}}",
columns = 2,
level = 1) |>
tab_spanner(label = "{{f_2 (c_ij ) = 1/c[_ij^2]}}",
columns = 3,
level = 1) |>
tab_spanner(label = "{{f_3 (c_ij ) = 1/c[_ij^0.1]}}",
columns = 4,
level = 1) |>
fmt_number(decimals = 3) |>
# cols_label(V_unc_i_1 = md("units: *f<sub>1</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            V_unc_i_2 = md("units: *f<sub>2</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            V_unc_i_3 = md("units: *f<sub>3</sub>(c<sub>ij</sub>)-weighted physicians*"),
#            .fn = md)  |>
cols_label(V_unc_i_1 = md("units: *physicians-minute^-3*"),
V_unc_i_2 = md("units: *physicians-minute^-2*"),
V_unc_i_3 = md("units: *physicians-minute^-0.1*"),
.fn = md)  |>
cols_align(align = "center",
columns = 2:4) |>
cols_width(
stub() ~ px(60),
everything() ~ px(180)
) |>
grand_summary_rows(
columns = c(V_unc_i_1, V_unc_i_2, V_unc_i_3),
fns = list(label = "Sum", fn = "sum")) |>
tab_options(column_labels.font.size = "small") |>
as_latex()
This divergence in application is mirrored in the literature itself. We conducted a bibliographic analysis of the literature that cites Hansen [@hansen1959], Wilson [@wilson1971] or both to confirm this limited integration: only `r (n_b / (n_b + n_h + n_w)) |> scales::percent(0.1)`of works in our corpus cite both (shown in pink in @fig-docs-per-year). This is `r (n_b) |> prettyNum(big.mark = ",")` of the `r(n_h+n_w+n_b) |> prettyNum(big.mark = ",")` documents that emerged from our search of Web of Science using the "Cited References" functionality, and the digital object identifiers of Hansen [@hansen1959] and Wilson [@wilson1971].
This divergence is especially striking given the context in which both frameworks emerged. As noted in @battyChronicleScientificPlanning1994, large scale spatial interaction models (like Wilson's) responded to important developments at the time, a need "to meet the dictates and needs of public policy for strategic land use and transportation planning". And these needs were far from trivial: in the U.S., for instance, the Federal-Aid Highway Act of 1956 set in motion the construction of the Interstate Highway System with an eventual budget exceeding $600 billion in today’s dollars [@weinerUrbanTransportationPlanning2016; @mdotMnDOTJoins2007]. In this context, spatial interaction models were incorporated into institutional practices focused on "predict and provide" travel demand forecasting [@kovatch1971modeling; @weinerUrbanTransportationPlanning2016]. Accessibility analysis, by contrast, remained more conceptually diffuse, focused on indicators of "potential" spatial interaction with opportunities rather than flows that could tangibly guide infrastructure decisions (e.g., roadway capacity expansion, new construction). Whereas spatial interaction modelling became a key element of transportation planning practice, accessibility remained a somewhat more academic pursuit, and the two streams of literature only rarely connected.
#| label: fig-analytical-device-conc-accessibility
#| out-width: 70%
#| fig-cap: "The family of accessibility measures analytical framework: labelling and associating ij flows, zonal weights, the single marginals, and the total marginal."
knitr::include_graphics(glue::glue(here::here(),
"/figures/access-analytical-device.png"))
#| label: simple-numerical-example-opportunities-and-population
id <- c("1", "2", "3")
O_i <- c(4, 10, 6)
D_j <- c(160, 150, 180)
LU <- data.frame(id, O_i, D_j)
490/3
34-28
28-12
round(1.0000000, digits = 3)
round(1.123456789, digits = 3)
env::status()
renv::status()
